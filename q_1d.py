# -*- coding: utf-8 -*-
"""Q_1D.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1pQmQGjfZOWFMDXL_As0A6P4h2aFmxmzc
"""

import pandas as pd
import re
import sqlite3

input_file = '/content/Input_sheet.xlsx'
spec_file = '/content/Specification_File.xlsx'
output_file = '/content/Output_sheet.xlsx'

input_df = pd.read_excel(input_file)
spec_df = pd.read_excel(spec_file)
output_df = pd.read_excel(output_file)

print(input_df.shape)
print(spec_df.shape)
print(output_df.shape)

input_df.head()

input_df.columns

spec_df.head()

spec_df.columns

output_df.head()

output_df.columns

def extract_specification_info(text):
    if isinstance(text, str):
        start_tag = "Standard :"
        end_tag = "Version :"

        start_pos = text.find(start_tag)
        end_pos = text.find(end_tag, start_pos)

        if start_pos != -1 and end_pos != -1:
            specification_info = text[start_pos + len(start_tag):end_pos].strip()
            return specification_info
        else:
            return None
    else:
        return None

input_df['Specification'] = input_df['Disclosure-Information '].apply(extract_specification_info)

input_df

input_df = input_df[input_df['Specification'].notna()]
input_df

duplicate_rows = input_df[input_df.duplicated()]
print("Duplicate rows:")
duplicate_rows

input_df = input_df.drop_duplicates()
input_df

unique_entries_count = input_df['Specification'].nunique()
print(f"Number of unique entries in 'Specification' column: {unique_entries_count}")
unique_entries = input_df['Specification'].unique()
print("Unique entries in 'Specification' column:")
for entry in unique_entries:
    print(entry)

input_df = input_df.drop_duplicates(subset=['Specification'])
print("DataFrame with unique 'Specification':")
input_df

spec_df.columns

filtered_df = spec_df[spec_df['Formatted Specs'].str.contains(r'^TS \d', regex=True)]
print("Filtered rows:")
filtered_df

def map_spec_to_group(spec_list, filtered_df):
    groups = []
    for spec in spec_list.split('|'):
        group = filtered_df.loc[filtered_df['Formatted Specs'] == spec.strip(), 'Responsible Working Group'].values
        if len(group) > 0:
            groups.append(group[0])
        else:
            groups.append(None)
    return '|'.join([g for g in groups if g])

input_df['Responsible Working Group'] = input_df['Specification'].apply(lambda x: map_spec_to_group(x, filtered_df))
print("Updated input_df:")
input_df

unique_elements = set(input_df['Responsible Working Group'].str.split('|').explode())
unique_elements.discard('')

print("Unique elements in Responsible Working Group:")
for element in unique_elements:
    print(element)

unique_elements = set(input_df['Responsible Working Group'].str.split('|').explode())

unique_elements.discard('')

for element in unique_elements:
    input_df[element] = 0

for idx, row in input_df.iterrows():
    elements = row['Responsible Working Group'].split('|')
    for element in elements:
        if element in unique_elements:
            input_df.at[idx, element] = elements.count(element)

print("Updated input_df with occurrence counts:")
input_df

input_df.to_csv('/content/output.csv', index=False)
from google.colab import files
files.download('/content/output.csv')